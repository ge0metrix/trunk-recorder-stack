[
    {
        "id": "c0ad280f2a406602",
        "type": "tab",
        "label": "Tone Detector",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "339d223dd3f06b96",
        "type": "tab",
        "label": "Log Units",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0da004d3b02fc52a",
        "type": "tab",
        "label": "Log Calls",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "599f40c0ed2c1b5e",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "85cdec81b5aa80f0",
        "type": "mqtt-broker",
        "name": "mosquitto",
        "broker": "mosquitto",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "850761b4eea228c1",
        "type": "sqlitedb",
        "db": "/app/unitfiles/units.db",
        "mode": "RWC"
    },
    {
        "id": "784356d13ba635b6",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "61ed65d487d9eb58",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "558eb89b62f52b35",
        "type": "ui_group",
        "name": "Default",
        "tab": "784356d13ba635b6",
        "order": 1,
        "disp": false,
        "width": "20",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0a08bcbd3294041f",
        "type": "mqtt in",
        "z": "c0ad280f2a406602",
        "name": "Call End",
        "topic": "trunkrecorder/status/call_end",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "85cdec81b5aa80f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 140,
        "wires": [
            [
                "cdf0adc2ed4112a5",
                "a36346d05aed60d0",
                "42ac89d733c38732"
            ]
        ]
    },
    {
        "id": "cdf0adc2ed4112a5",
        "type": "file in",
        "z": "c0ad280f2a406602",
        "name": "",
        "filename": "payload.call.call_filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 280,
        "y": 100,
        "wires": [
            [
                "4e6e086b5b2fb3d9"
            ]
        ]
    },
    {
        "id": "a36346d05aed60d0",
        "type": "change",
        "z": "c0ad280f2a406602",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "call_data",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "efc95277a64a265f"
            ]
        ]
    },
    {
        "id": "4e6e086b5b2fb3d9",
        "type": "function",
        "z": "c0ad280f2a406602",
        "name": "format file payload for merge",
        "func": "var buffer = msg.payload;\ntmp = msg;\ntmp.payload = {};\ntmp.payload.file = buffer;\ntmp.topic = \"files\";\nreturn tmp;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [
            [
                "e2ec0d7c97a64d76"
            ]
        ]
    },
    {
        "id": "71b1a77d3b8f4403",
        "type": "debug",
        "z": "c0ad280f2a406602",
        "name": "Http Request Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 200,
        "wires": []
    },
    {
        "id": "e2ec0d7c97a64d76",
        "type": "join",
        "z": "c0ad280f2a406602",
        "name": "Merge Call Audio and Call Data ",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "1",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 820,
        "y": 140,
        "wires": [
            [
                "f0be0a71c09accf4"
            ]
        ]
    },
    {
        "id": "efc95277a64a265f",
        "type": "function",
        "z": "c0ad280f2a406602",
        "name": "format call payload for merge",
        "func": "var call = msg.payload.call\nmsg.payload = call;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 180,
        "wires": [
            [
                "e2ec0d7c97a64d76",
                "c6f6af57627c70a9"
            ]
        ]
    },
    {
        "id": "b8b50278c24253a7",
        "type": "http request",
        "z": "c0ad280f2a406602",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://tone-detector:8002/tone_detect",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1270,
        "y": 140,
        "wires": [
            [
                "ea6eef795927cbac",
                "3a2945a20aad22ad"
            ]
        ]
    },
    {
        "id": "ea6eef795927cbac",
        "type": "debug",
        "z": "c0ad280f2a406602",
        "name": "Http Response Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1500,
        "y": 80,
        "wires": []
    },
    {
        "id": "f0be0a71c09accf4",
        "type": "function",
        "z": "c0ad280f2a406602",
        "name": "build http request",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'multipart/form-data';\nmsg.headers['Accept'] = 'application/json';\nmsg.payload = {\n    \"freq\": msg.payload.call_data.freq,\n    \"start_time\": msg.payload.call_data.start_time,\n    \"stop_time\": msg.payload.call_data.stop_time,\n    \"timestamp\": msg.payload.call_data.start_time,\n    \"emergency\": msg.payload.call_data.emergency,\n    \"encrypted\": msg.payload.call_data.encrypted,\n    \"call_length\": msg.payload.call_data.length,\n    \"talkgroup\": msg.payload.call_data.talkgroup,\n    \"talkgroup_tag\": msg.payload.call_data.talkgroup_alpha_tag,\n    \"talkgroup_description\": msg.payload.call_data.talkgroup_description,\n    \"talkgroup_group_tag\": msg.payload.call_data.talkgroup_tag,\n    \"talkgroup_group\": msg.payload.call_data.talkgroup_group,\n    \"audio_type\": msg.payload.call_data.audio_type,\n    \"short_name\": msg.payload.call_data.sys_name,\n    \"file\": {\n        \"value\": msg.payload.files.file,\n        \"options\": {\n            \"filename\": msg.filename\n        }\n    }\n}\nreturn msg;\n\n/*\n\n{\n    \"freq\": 483125000,\n    \"start_time\": 1703806824,\n    \"stop_time\": 1703806838,\n    \"emergency\": 0,\n    \"priority\": 0,\n    \"mode\": 0,\n    \"duplex\": 0,\n    \"encrypted\": 0,\n    \"call_length\": 13,\n    \"talkgroup\": 1,\n    \"talkgroup_tag\": \"Westford Police\",\n    \"talkgroup_description\": \"\",\n    \"talkgroup_group_tag\": \"\",\n    \"talkgroup_group\": \"\",\n    \"audio_type\": \"analog\",\n    \"short_name\": \"westford\",\n    \"freqList\": [\n        {\n            \"freq\": 483125000,\n            \"time\": 1703806824,\n            \"pos\": 0.0,\n            \"len\": 13.33,\n            \"error_count\": \"0\",\n            \"spike_count\": \"0\"\n        }\n    ],\n    \"srcList\": [\n        {\n            \"src\": 4134,\n            \"time\": 1703806824,\n            \"pos\": 0.0,\n            \"emergency\": 0,\n            \"signal_system\": \"\",\n            \"tag\": \"\"\n        }\n    ]\n}\n\n*/",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "b8b50278c24253a7",
                "71b1a77d3b8f4403"
            ]
        ]
    },
    {
        "id": "3a2945a20aad22ad",
        "type": "link out",
        "z": "c0ad280f2a406602",
        "name": "Tone Data Out",
        "mode": "link",
        "links": [
            "14a9170f864c715a",
            "d83283b014682dbe"
        ],
        "x": 1515,
        "y": 140,
        "wires": []
    },
    {
        "id": "42ac89d733c38732",
        "type": "debug",
        "z": "c0ad280f2a406602",
        "name": "Call End Event Debug",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 140,
        "wires": []
    },
    {
        "id": "c6f6af57627c70a9",
        "type": "link out",
        "z": "c0ad280f2a406602",
        "name": "Call Data Out",
        "mode": "link",
        "links": [
            "8f3e7d830c57b049"
        ],
        "x": 715,
        "y": 240,
        "wires": []
    },
    {
        "id": "7c65a46f8b06e374",
        "type": "mqtt in",
        "z": "339d223dd3f06b96",
        "name": "",
        "topic": "trunkrecorder/unit/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "85cdec81b5aa80f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 160,
        "wires": [
            [
                "98f31d183607cb3d",
                "6574885cee8ae9c8"
            ]
        ]
    },
    {
        "id": "b461ef98d2382bd1",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 100,
        "wires": []
    },
    {
        "id": "eff5c5955cfe9b27",
        "type": "file",
        "z": "339d223dd3f06b96",
        "name": "",
        "filename": "/app/unitfiles/unitlogs.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 870,
        "y": 160,
        "wires": [
            [
                "f477059d1aecf40a"
            ]
        ]
    },
    {
        "id": "9ea9ace76c62bd58",
        "type": "change",
        "z": "339d223dd3f06b96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.end",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 140,
        "wires": [
            [
                "eff5c5955cfe9b27",
                "b461ef98d2382bd1",
                "9d6f91112d423598"
            ]
        ]
    },
    {
        "id": "98f31d183607cb3d",
        "type": "switch",
        "z": "339d223dd3f06b96",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "end",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "call",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 160,
        "wires": [
            [
                "9ea9ace76c62bd58",
                "759d7306b54897a9"
            ],
            [
                "2b55bbc22f1100fc",
                "ace17cefed9c2819"
            ]
        ]
    },
    {
        "id": "2b55bbc22f1100fc",
        "type": "change",
        "z": "339d223dd3f06b96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.call",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 180,
        "wires": [
            [
                "eff5c5955cfe9b27",
                "717633646cfb60bb"
            ]
        ]
    },
    {
        "id": "759d7306b54897a9",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 100,
        "wires": []
    },
    {
        "id": "ace17cefed9c2819",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "717633646cfb60bb",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 220,
        "wires": []
    },
    {
        "id": "f477059d1aecf40a",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 160,
        "wires": []
    },
    {
        "id": "6574885cee8ae9c8",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 320,
        "y": 100,
        "wires": []
    },
    {
        "id": "460d5cd393022d89",
        "type": "sqlite",
        "z": "339d223dd3f06b96",
        "mydb": "850761b4eea228c1",
        "sqlquery": "prepared",
        "sql": "INSERT INTO unitdata (\nsys_num, sys_name, unit, unit_alpha_tag,\ntalkgroup, talkgroup_alpha_tag, talkgroup_description, talkgroup_group,\ntalkgroup_tag, talkgroup_patches,  call_num, freq, position, length,\nemergency, encrypted, start_time, stop_time, error_count, spike_count,\nsample_count, transmission_filename\n)\nVALUES ($sys_num, $sys_name, $unit, $unit_alpha_tag,\n$talkgroup, $talkgroup_alpha_tag, $talkgroup_description, $talkgroup_group,\n$talkgroup_tag, $talkgroup_patches,  $call_num, $freq, $position, $length,\n$emergency, $encrypted, $start_time, $stop_time, $error_count, $spike_count,\n$sample_count, $transmission_filename)",
        "name": "insert",
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "07883dbaf3ed95dd"
            ]
        ]
    },
    {
        "id": "9d6f91112d423598",
        "type": "change",
        "z": "339d223dd3f06b96",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "params.$sys_num",
                "pt": "msg",
                "to": "payload.sys_num",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$sys_name",
                "pt": "msg",
                "to": "payload.sys_name",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$unit",
                "pt": "msg",
                "to": "payload.unit",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$unit_alpha_tag",
                "pt": "msg",
                "to": "payload.unit_alpha_tag",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup",
                "pt": "msg",
                "to": "payload.talkgroup",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup_alpha_tag",
                "pt": "msg",
                "to": "payload.talkgroup_alpha_tag",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup_description",
                "pt": "msg",
                "to": "payload.talkgroup_description",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup_group",
                "pt": "msg",
                "to": "payload.talkgroup_group",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup_tag",
                "pt": "msg",
                "to": "payload.talkgroup_tag",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$talkgroup_patches",
                "pt": "msg",
                "to": "payload.talkgroup_patches",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$call_num",
                "pt": "msg",
                "to": "payload.call_num",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$freq",
                "pt": "msg",
                "to": "payload.freq",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$position",
                "pt": "msg",
                "to": "payload.position",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$length",
                "pt": "msg",
                "to": "payload.length",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$emergency",
                "pt": "msg",
                "to": "payload.emergency",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$encrypted",
                "pt": "msg",
                "to": "payload.encrypted",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$start_time",
                "pt": "msg",
                "to": "payload.start_time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$stop_time",
                "pt": "msg",
                "to": "payload.stop_time",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$error_count",
                "pt": "msg",
                "to": "payload.error_count",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$spike_count",
                "pt": "msg",
                "to": "payload.spike_count",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$sample_count",
                "pt": "msg",
                "to": "payload.sample_count",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "params.$transmission_filename",
                "pt": "msg",
                "to": "payload.transmission_filename",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 900,
        "y": 120,
        "wires": [
            [
                "460d5cd393022d89",
                "be646a79568595bc"
            ]
        ]
    },
    {
        "id": "be646a79568595bc",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 40,
        "wires": []
    },
    {
        "id": "07883dbaf3ed95dd",
        "type": "sqlite",
        "z": "339d223dd3f06b96",
        "mydb": "850761b4eea228c1",
        "sqlquery": "fixed",
        "sql": "SELECT COUNT(*) AS UnitCount FROM UnitData;",
        "name": "",
        "x": 1260,
        "y": 100,
        "wires": [
            [
                "a209f3b7f3701d0e"
            ]
        ]
    },
    {
        "id": "06e448bc31cf4f02",
        "type": "debug",
        "z": "339d223dd3f06b96",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload.UnitCount",
        "statusType": "msg",
        "x": 1480,
        "y": 160,
        "wires": []
    },
    {
        "id": "e833e4cf057c6075",
        "type": "ui_gauge",
        "z": "339d223dd3f06b96",
        "name": "",
        "group": "558eb89b62f52b35",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "20000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1430,
        "y": 320,
        "wires": []
    },
    {
        "id": "a209f3b7f3701d0e",
        "type": "function",
        "z": "339d223dd3f06b96",
        "name": "function 2",
        "func": "var payload = msg.payload[0];\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1200,
        "y": 280,
        "wires": [
            [
                "e833e4cf057c6075",
                "06e448bc31cf4f02"
            ]
        ]
    },
    {
        "id": "36165a965273f414",
        "type": "join",
        "z": "0da004d3b02fc52a",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "3",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 270,
        "y": 100,
        "wires": [
            [
                "e724958d804c0df8",
                "a2fa0a16267ee49d"
            ]
        ]
    },
    {
        "id": "8f3e7d830c57b049",
        "type": "link in",
        "z": "0da004d3b02fc52a",
        "name": "Call Data In",
        "links": [
            "c6f6af57627c70a9"
        ],
        "x": 155,
        "y": 120,
        "wires": [
            [
                "36165a965273f414",
                "6dbe3b27758dce81"
            ]
        ]
    },
    {
        "id": "d83283b014682dbe",
        "type": "link in",
        "z": "0da004d3b02fc52a",
        "name": "Tone Data In",
        "links": [
            "3a2945a20aad22ad"
        ],
        "x": 155,
        "y": 80,
        "wires": [
            [
                "36165a965273f414",
                "2b67830d0abab559"
            ]
        ]
    },
    {
        "id": "e724958d804c0df8",
        "type": "change",
        "z": "0da004d3b02fc52a",
        "name": "Remove Audio File",
        "rules": [
            {
                "t": "set",
                "p": "payload.call_data.tones",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "move",
                "p": "payload.files.dtmf",
                "pt": "msg",
                "to": "payload.call_data.tones.dtmf",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.files.hi_low",
                "pt": "msg",
                "to": "payload.call_data.tones.hi_low",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.files.long",
                "pt": "msg",
                "to": "payload.call_data.tones.long",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.files.quick_call",
                "pt": "msg",
                "to": "payload.call_data.tones.quick_call",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload.files",
                "pt": "msg"
            },
            {
                "t": "move",
                "p": "payload.call_data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "64d5d7cd7e8005bd"
            ]
        ]
    },
    {
        "id": "a2fa0a16267ee49d",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "Reconstructed",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 40,
        "wires": []
    },
    {
        "id": "7bf340fbf65e465b",
        "type": "file",
        "z": "0da004d3b02fc52a",
        "name": "Log Call to File",
        "filename": "/app/logs/Calls.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 840,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2b67830d0abab559",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "Tone Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "6dbe3b27758dce81",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "Call Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 160,
        "wires": []
    },
    {
        "id": "64d5d7cd7e8005bd",
        "type": "switch",
        "z": "0da004d3b02fc52a",
        "name": "Check Valid",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "id",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "7bf340fbf65e465b",
                "754c91b9d3ad065c"
            ],
            []
        ]
    },
    {
        "id": "79134278d91d6e9a",
        "type": "mqtt out",
        "z": "0da004d3b02fc52a",
        "name": "",
        "topic": "transcribe/todo",
        "qos": "1",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "85cdec81b5aa80f0",
        "x": 1480,
        "y": 40,
        "wires": []
    },
    {
        "id": "0b8adc6c6428a9c4",
        "type": "mqtt in",
        "z": "0da004d3b02fc52a",
        "name": "",
        "topic": "transcribe/done/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "85cdec81b5aa80f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 320,
        "wires": [
            [
                "cc4ffd52b0bb1212",
                "2ded182da3999d7d",
                "2247a8a535ac8199"
            ]
        ]
    },
    {
        "id": "cc4ffd52b0bb1212",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "Transcribed Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "cc284d3c41d7e75a",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 120,
        "wires": []
    },
    {
        "id": "2247a8a535ac8199",
        "type": "switch",
        "z": "0da004d3b02fc52a",
        "name": "Tones?",
        "property": "payload.tonecount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lt",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 400,
        "wires": [
            [
                "87f772649bcbe86c"
            ],
            [
                "5ee85acd5f5d8092"
            ]
        ]
    },
    {
        "id": "18485060217f9c5c",
        "type": "debug",
        "z": "0da004d3b02fc52a",
        "name": "Debug non-tone detected",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1050,
        "y": 440,
        "wires": []
    },
    {
        "id": "87f772649bcbe86c",
        "type": "function",
        "z": "0da004d3b02fc52a",
        "name": "format email",
        "func": "msg.topic = \"Tones Detected - [\" + msg.payload.talkgroup_alpha_tag + \"]\";\nmsg.from = \"geometrix@gmail.com\";\n\n\nvar message = [];\n\nmessage.push(\"Tones Detected for \");\nmessage.push(msg.payload.talkgroup_alpha_tag);\n\nmessage.push(\"\\n\\n\");\nmessage.push(\"Tones: \\n\\nQUICK CALL:\");\nmessage.push(JSON.stringify(msg.payload.tones.quick_call));\nmessage.push(\"\\n\\nLONG: \");\nmessage.push(JSON.stringify(msg.payload.tones.long));\nmessage.push(\"\\n\\nHI LOW: \");\nmessage.push(JSON.stringify(msg.payload.tones.hi_low));\nmessage.push(\"\\n\\nDTMF: \");\nmessage.push(JSON.stringify(msg.payload.tones.dtmf));\nmessage.push(\"\\n\\n\");\nmessage.push(msg.payload.transcript[0])\nmsg.payload = message.join(\"\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 400,
        "wires": [
            [
                "910ed3d2075f9408"
            ]
        ]
    },
    {
        "id": "5ee85acd5f5d8092",
        "type": "function",
        "z": "0da004d3b02fc52a",
        "name": "format email",
        "func": "msg.topic = \"Tones Detected - [\" + msg.payload.talkgroup_alpha_tag + \"]\";\nmsg.from = \"geometrix@gmail.com\";\n\n\nvar message = [];\n\nmessage.push(\"Tones Detected for \");\nmessage.push(msg.payload.talkgroup_alpha_tag);\n\nmessage.push(\"\\n\\n\");\nmessage.push(\"Tones: \\n\\nQUICK CALL:\");\nmessage.push(JSON.stringify(msg.payload.tones.quick_call));\nmessage.push(\"\\n\\nLONG: \");\nmessage.push(JSON.stringify(msg.payload.tones.long));\nmessage.push(\"\\n\\nHI LOW: \");\nmessage.push(JSON.stringify(msg.payload.tones.hi_low));\nmessage.push(\"\\n\\nDTMF: \");\nmessage.push(JSON.stringify(msg.payload.tones.dtmf));\nmessage.push(\"\\n\\n\");\nmessage.push(msg.payload.transcript[0])\nmsg.payload = message.join(\"\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 440,
        "wires": [
            [
                "18485060217f9c5c"
            ]
        ]
    },
    {
        "id": "910ed3d2075f9408",
        "type": "e-mail",
        "z": "0da004d3b02fc52a",
        "server": "email-smtp.us-east-1.amazonaws.com",
        "port": "587",
        "authtype": "BASIC",
        "saslformat": true,
        "token": "oauth2Response.access_token",
        "secure": false,
        "tls": false,
        "name": "geometrix@gmail.com",
        "dname": "EmailMe",
        "x": 1000,
        "y": 400,
        "wires": []
    },
    {
        "id": "2ded182da3999d7d",
        "type": "file",
        "z": "0da004d3b02fc52a",
        "name": "",
        "filename": "/app/logs/Callstranscribed.log",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 570,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "754c91b9d3ad065c",
        "type": "function",
        "z": "0da004d3b02fc52a",
        "name": "Check for tones",
        "func": "var dots = context.get(\"dots\", \"memoryOnly\") || \"ring\";\ndots = (dots == \"ring\") ? \"dot\" : \"ring\"\ncontext.set(\"dots\", dots, \"memoryOnly\")\n\nvar tonecount = 0\n\nif (msg.payload.tones.quick_call !== undefined && msg.payload.tones.hi_low !== undefined && msg.payload.tones.long !== undefined){\n    tonecount = msg.payload.tones.quick_call.length + msg.payload.tones.hi_low.length + msg.payload.tones.long.length;\n}\n\n\nnode.status({ fill: \"red\", shape: dots, text: tonecount});\nif (tonecount >= 1){\n    node.status({ fill: \"green\", shape: dots, text: tonecount });\n}\nmsg.payload.tonecount = tonecount;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 40,
        "wires": [
            [
                "177aa3f832e8a42a"
            ]
        ]
    },
    {
        "id": "177aa3f832e8a42a",
        "type": "switch",
        "z": "0da004d3b02fc52a",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "5",
                "vt": "str"
            },
            {
                "t": "lt",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 40,
        "wires": [
            [
                "cc284d3c41d7e75a",
                "ea098172c43beeec"
            ],
            []
        ]
    },
    {
        "id": "ea098172c43beeec",
        "type": "switch",
        "z": "0da004d3b02fc52a",
        "name": "Tones?",
        "property": "payload.tonecount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lt",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 40,
        "wires": [
            [
                "79134278d91d6e9a"
            ],
            []
        ]
    },
    {
        "id": "cc3793f235694a02",
        "type": "mqtt in",
        "z": "599f40c0ed2c1b5e",
        "name": "",
        "topic": "trunkrecorder/status/call_end/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "85cdec81b5aa80f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 80,
        "wires": [
            [
                "b1fd1215c30629fd",
                "e3d64eaf8061890b"
            ]
        ]
    },
    {
        "id": "091602cf109f60bb",
        "type": "ui_table",
        "z": "599f40c0ed2c1b5e",
        "group": "558eb89b62f52b35",
        "name": "",
        "order": 0,
        "width": "20",
        "height": "9",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "system",
                "title": "System",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "talkgroup",
                "title": "TalkGroup",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "starttime",
                "title": "Start",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "duration",
                "title": "Duration",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 650,
        "y": 80,
        "wires": []
    },
    {
        "id": "b1fd1215c30629fd",
        "type": "debug",
        "z": "599f40c0ed2c1b5e",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 140,
        "wires": []
    },
    {
        "id": "e3d64eaf8061890b",
        "type": "function",
        "z": "599f40c0ed2c1b5e",
        "name": "function 1",
        "func": "/*\n{\n    command: \"addRow\",\n    arguments: [\n        {\n            \"Name\": \"Oli Bob\",\n            \"Age\": \"12\",\n            \"Favorite Color\": \"red\",\n            \"Date Of Birth\": \"12/08/2017\",\n            \"Rating\": 2\n        },\n        true\n    ],\n    returnPromise: true\n}\n*/\n\nvar arguments = {\n    \"id\": msg.payload.call.id,\n    \"system\": msg.payload.call.sys_name,\n    \"talkgroup\": msg.payload.call.talkgroup_alpha_tag,\n    \"duration\": msg.payload.call.length,\n    \"starttime\": msg.payload.call.start_time\n};\nvar result = {};\nresult.command = 'addRow';\nresult.arguments = [];\nresult.arguments[0]=arguments;\n\nmsg.payload=result;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 80,
        "wires": [
            [
                "091602cf109f60bb",
                "8d32015bc9967a60"
            ]
        ]
    },
    {
        "id": "8d32015bc9967a60",
        "type": "debug",
        "z": "599f40c0ed2c1b5e",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 140,
        "wires": []
    }
]